if (q1<q)
q=q1
}
q} else if (length(w2)>4*m) {
h=kmeans(w2,m,nstart=20)
f2=h$cluster
f[A3[,1]==0]=f2 #
q=1-sum(f==r2)/n
for (ks in 2:2)
{r2=-r2+3
q1=1-sum(f==r2)/n
if (q1<q)
q=q1
}
q
}else  {
h=kmeans(w3,m,nstart=20)
f2=h$cluster
f[A3[,1]==0]=f2 #
q=1-sum(f==r2)/n
for (ks in 2:2)
{r2=-r2+3
q1=1-sum(f==r2)/n
if (q1<q)
q=q1
}
q
}
B4=matrix(rep(0,m2*m3),nrow=m2)
B4 <- kerm(f3,f,A3[A3[,1]==1,],m3,m2) #
if ( B4[1,1] < 0.5)
B4 <- kerm(g3,f,A3[A3[,1]==1,],m3,m2) #
B4 <- (B4 + t(B4))/2
new_f <- rep(NA,99)
for (i in 1:99) {
new_f[i] <- f[order_a[i,1]]
}
final_H <- matrix(rep(0,99*99),nrow=99)
for (i in 1:99){
for (j in 1:99){
k <- new_f[i]
l <- new_f[j]
final_H[i,j] <- B4[k,l]
}
}
#new_H <- matrix(NA, 999, 999)
#for (i in 1:999) {
# new_H[,i] <- H[,order_a[i,1]]
#}
#final_H <- matrix(NA, 999, 999)
#for (i in 1:999) {
# final_H[i,] <- new_H[order_a[i,1],]
#}
M <- matrix(rep(0,99*99),nrow=99)
for (i in 1:99){
for (j in 1:99){
if(i != j) {
M[i,j] <- (QQ1[i,j]-final_H[i,j])/sqrt(final_H[i,j])/sqrt(1-final_H[i,j]) #
} else
{
M[i,j] =0
}
}
}
#M[lower.tri(M)] <- t(M)[lower.tri(M)]#提取M矩阵的上对角元
##M[is.na(M)] <- 0
M11 <- M[1:N1,1:N1]
M12 <- M[1:N1,(N1+1):99]
M21 <- M[(N1+1):99,1:N1]
M22 <- M[(N1+1):99,(N1+1):99] ##应该是0
M11 <- M11/sqrt(N1)
u <- (sqrt(N1-1)+sqrt(N2))^2
sigma <- sqrt(u)*{(1/sqrt(N1-1)+1/sqrt(N2))^(1/3)}
t21 <- (max(eigen(t(M12) %*% M12)$values)-u)/sigma
t22 <- (max(eigen(M11)$values)-2)*N1^(2/3)
t23 <- (-min(eigen(M11)$values)-2)*N1^(2/3)
t11 <- abs((max(eigen(t(M12) %*% M12)$values) -u)/sigma)
t12 <- abs(max(eigen(M11)$values)-2)*N1^(2/3)
t13 <- abs(-min(eigen(M11)$values)-2)*N1^(2/3)
t1 <- max(c(t11+t12,t11+t13))
t2 <- max(c(t11-t12,t11-t13))
t3 <- max(c(t21-t22,t21-t23))
t4 <- max(c(t21+t22,t21+t23))
t5 <- max(c(t11/t12,t11/t13,t12/t11,t13/t11))
t6 <- max(c(t11,t12,t13))
t7 <- max(c(t21/t22,t21/t23,t22/t21,t23/t21))
out1[[z]] <- t1
out2[[z]] <- t2
out3[[z]] <- t3
out4[[z]] <- t4
out5[[z]] <- t5
out6[[z]] <- t6
out7[[z]] <- t7
}
rej1 <- list()
rej2 <- list()
rej3 <- list()
rej4 <- list()
rej5 <- list()
rej6 <- list()
rej7 <- list()
rej9 <- list()
rej10 <- list()
for (z in 1:100) {
EA <- matrix(0,100,100)
Q <- matrix(c(0.3,0.1,0.1,0.3), 2, 2)
z1 <- matrix(c(1,0),2,1)
z2 <- matrix(c(0,1),2,1)
EA[1:50, 1:50] <- matrix(t(z1) %*% Q %*% z1, 50, 50)
EA[51:100, 1:50] <- matrix(t(z2) %*% Q %*% z1, 50, 50)
EA[1:50, 51:100] <- matrix(t(z1) %*% Q %*% z2, 50, 50)
EA[51:100, 51:100] <- matrix(t(z2) %*% Q %*% z2, 50, 50)
A <- matrix(0,100,100)
for (i in 1:100){
for(j in 1:100){
A[i,j] <- rbinom(1,1,EA[i,j])
}
}
A1 <- A
A1[lower.tri(A1)] <- t(A1)[lower.tri(A1)]#提取A矩阵的上对角元
A3 <- A1[-1,-1]
b <- A3[1,]
Nr1 <- length(which (b == 1, arr.ind = T))
Nr2 <- length(which (b == 0, arr.ind = T))
u <- (sqrt(Nr1-1)+sqrt(Nr2))^2
sigma <- sqrt(u)*{(1/sqrt(Nr1-1)+1/sqrt(Nr2))^(1/3)}
X1 <- matrix(rnorm(Nr1*Nr1,0,1),nrow=Nr1,ncol=Nr1)
diag(X1) <- rnorm(Nr1,0,2)
X1[lower.tri(X1)] <- t(X1)[lower.tri(X1)]#提取X矩阵的上对角元
X1 <- X1/sqrt(Nr1)
X2 <- matrix(rnorm(Nr1*Nr2,0,1),nrow=Nr1,ncol=Nr2)
rt11 <- abs((max(eigen(t(X2) %*% X2)$values)-u)/sigma)
rt12 <- abs(max(eigen(X1)$values)-2)*N1^(2/3)
rt13 <- abs(-min(eigen(X1)$values)-2)*N1^(2/3)
rt21 <- (max(eigen(t(X2) %*% X2)$values)-u)/sigma
rt22 <- (max(eigen(X1)$values)-2)*Nr1^(2/3)
rt23 <- (-min(eigen(X1)$values)-2)*Nr1^(2/3)
rej1[[z]] <- rt11+rt12
rej2[[z]] <- rt11-rt12
rej3[[z]] <- rt11/rt12
rej4[[z]] <- rt21+rt22
rej5[[z]] <- rt21-rt22
rej6[[z]] <- rt21/rt22
rej7[[z]] <- rt22/rt21
rej9[[z]] <- rt21
rej10[[z]] <- rt12
}
rej1<- as.vector(unlist(rej1))
rej2<- as.vector(unlist(rej2))
rej3<- as.vector(unlist(rej3))
rej4<- as.vector(unlist(rej4))
rej5<- as.vector(unlist(rej5))
rej6<- as.vector(unlist(rej6))
rej7<- as.vector(unlist(rej7))
rej9<- as.vector(unlist(rej9))
rej10<- as.vector(unlist(rej10))
rej8 <- rep(0,100)
for (z in 1:100){
if (rej6[z] < rej7[z])
rej8[z] <- rej7[z]
else rej8[z] <- rej6[z]
}
new_rej12 <- rej1[order(rej1)][95]*2 #rt11+rt12 1
new_rej22 <- rej2[order(rej2)][95]*2 #rt11-rt12 2
new_rej32 <- rej3[order(rej3)][95]*2 #rt11/rt12 5
new_rej42 <- rej4[order(rej4)][95]*2 #4
new_rej52 <- rej5[order(rej5)][95]*2 #3
new_rej82 <- rej8[order(rej8)][95]*2 #7
out1 <- as.vector(unlist(out1))
out2 <- as.vector(unlist(out2))
out3 <- as.vector(unlist(out3))
out4 <- as.vector(unlist(out4))
out5 <- as.vector(unlist(out5))
out6 <- as.vector(unlist(out6))
out7 <- as.vector(unlist(out7))
out12 <- list()
out22 <- list()
out32 <- list()
out42 <- list()
out52 <- list()
out62 <- list()
out72 <- list()
tw1 <- qtw(0.99, beta=1, lower.tail = TRUE, log.p = FALSE)
for (z in 1:100){
if ( out1[z] > new_rej12)
out12[[z]] <- 0
if ( out1[z] < new_rej12)
out12[[z]] <- 1
if ( out2[z] > new_rej22)
out22[[z]] <- 0
if ( out2[z] < new_rej22)
out22[[z]] <- 1
if ( out5[z] < new_rej32)
out52[[z]] <- 1
if ( out5[z] > new_rej32)
out52[[z]] <- 0
if ( out4[z] < new_rej42)
out42[[z]] <- 1
if (out4[z] > new_rej42)
out42[[z]] <- 0
if (out3[z] < new_rej52)
out32[[z]] <- 1
if (out3[z] > new_rej52)
out32[[z]] <- 0
if (out7[z] < new_rej82)
out72[[z]] <- 1
if (out7[z] > new_rej82)
out72[z] <- 0
if (out6[z] < tw1*3)
out62[[z]] <- 1
if (out6[z] > tw1*3)
out62[z] <- 0
}
out12<- as.vector(unlist(out12))
mo1 <- mean(out12)
out22 <- as.vector(unlist(out22))
mo2 <- mean(out22)
out32 <- as.vector(unlist(out32))
mo3 <- mean(out32)
out42 <- as.vector(unlist(out42))
mo4 <- mean(out42)
out52 <- as.vector(unlist(out52))
mo5 <- mean(out52)
out62 <- as.vector(unlist(out62))
mo6 <- mean(out62)
out72 <- as.vector(unlist(out72))
mo7 <- mean(out72)
knitr::opts_chunk$set(echo = TRUE)
mat <-
matrix(c(6510, 3490, 10000, 6760, 3240, 10000, 13270, 6730, 20000), 3, 3,
dimnames = list(
c("Rejected", "Accepted", "total"),
c("method A", "method B", "total")
))
mat
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(igraph)
library(RMTstat)
out1 <- list()
for (z in 1:100) {
EA <- matrix(0,100,100)
Q <- matrix(c(0.3,0.1,0.1,0.3), 2, 2)
z1 <- matrix(c(1,0),2,1)
z2 <- matrix(c(0,1),2,1)
EA[1:50, 1:50] <- matrix(t(z1) %*% Q %*% z1, 50, 50)
EA[51:100, 1:50] <- matrix(t(z2) %*% Q %*% z1, 50, 50)
EA[1:50, 51:100] <- matrix(t(z1) %*% Q %*% z2, 50, 50)
EA[51:100, 51:100] <- matrix(t(z2) %*% Q %*% z2, 50, 50)
A <- matrix(0,100,100)
for (i in 1:100){
for(j in 1:100){
A[i,j] <- rbinom(1,1,EA[i,j])
}
}
A1 <- A
A1[lower.tri(A1)] <- t(A1)[lower.tri(A1)]
A2 <- A1+diag(-diag(A1))
A3 <- A2[-1,-1]
S <- diag(A3[1,])
QQ <- -S %*% A3 %*% S + A3 %*% S + S %*% A3
a <- A3[1,]
index <- seq(1,99)
order_a <- cbind(index,a)
order_a <- order_a[order(order_a[,2],decreasing=T),]
a <- order_a[,2]
N1 <- length(which (a == 1, arr.ind = T))
N2 <- length(which (a == 0, arr.ind = T))
S1 <- diag(a)
new_A3 <- matrix(NA, 99, 99)
for (i in 1:99) {
new_A3[,i] <- A3[,order_a[i,1]]
}
final_A3 <- matrix(NA, 99, 99)
for (i in 1:99) {
final_A3[i,] <- new_A3[order_a[i,1],]
}
QQ1 <- -S1 %*% final_A3 %*% S1 + final_A3 %*% S1 + S1 %*% final_A3
pertur=function(x) {
r=length(x)
if (r==1)
x else {
Y=NULL
for (i in 1:r)
Y=rbind(Y, cbind(x[i], pertur(x[-i])))
Y
}
}
kerm=function(f,g,Q,m2,m3)
{ B=matrix(rep(0,m2*m3),nrow=m2)
for (i in 1:m2)
for (j in 1:m3)
{Q1=Q[f==i,]
if (sum(f==i)>1)
{Q2=Q1[,g==j]
if (sum(g==j)>1)
B[i,j]=sum(Q2)/length(Q2[1,])/length(Q2[,1])
else B[i,j]=sum(Q2)/length(Q2)}else {
Q2=Q1[g==j]
B[i,j]=sum(Q2)/length(Q2)
}
}
B
}
m <- 2
n <- 99
s=eigen(QQ) #
w=s$vectors[,1:m]
w1=s$vectors[,n:(n-m+1)]
r11 <- rep(1:1,49)
r12 <- rep(2:2,50)
r2 <- c(r11,r12)
w6=w5=w=cbind(w,w1)
w2=w[A3[,1]==0,] #
w3=w[A3[,1]==1,] #
f=rep(0,n)
if (length(w2)>4*m&length(w3)>4*m)
{
h2=kmeans(w2,m,nstart=20)
h3=kmeans(w3,m,nstart=20)
f2=h2$cluster
f3=h3$cluster
ce2=h2$centers
ce3=h3$centers
Q2=A3[A3[,1]==1,A3[,1]==1] #
Q3=A3[A3[,1]==1,A3[,1]==0] #
m2=length(ce2[,1])
m3=length(ce3[,1])
AS=pertur(1:m)
PI=matrix(rep(0,length(f3)*m3),ncol=m3)
s=1:length(f3)
for (i in 1: length(f3))
PI[s[i],f3[i]]=1
B2=kerm(f3,f3,Q2,m3,m3)
B3=kerm(f3,f2,Q3,m3,m2)
q=sum((B2-B3[,1:m3])^2)
g=f3
for (kl in 2:length(AS[,1]))
{ g3=PI%*%AS[kl,]
B3=kerm(g3,f2,Q3,m3,m2)
q1=sum((B2-B3[,1:m3])^2)
if (q1<q)
{ g=g3
q=q1
}
}
f[A3[,1]==0]=f2
f[A3[,1]==1]=g
AS=pertur(1:m)
q=1-sum(f==r2)/n
for (ks in 2:2)
{r2=-r2+3
q1=1-sum(f==r2)/n
if (q1<q)
q=q1
}
q} else if (length(w2)>4*m) {
h=kmeans(w2,m,nstart=20)
f2=h$cluster
f[A3[,1]==0]=f2 #
q=1-sum(f==r2)/n
for (ks in 2:2)
{r2=-r2+3
q1=1-sum(f==r2)/n
if (q1<q)
q=q1
}
q
}else  {
h=kmeans(w3,m,nstart=20)
f2=h$cluster
f[A3[,1]==0]=f2
q=1-sum(f==r2)/n
for (ks in 2:2)
{r2=-r2+3
q1=1-sum(f==r2)/n
if (q1<q)
q=q1
}
q
}
B4=matrix(rep(0,m2*m3),nrow=m2)
B4 <- kerm(f3,f,A3[A3[,1]==1,],m3,m2)
if ( B4[1,1] < 0.5)
B4 <- kerm(g3,f,A3[A3[,1]==1,],m3,m2)
B4 <- (B4 + t(B4))/2
new_f <- rep(NA,99)
for (i in 1:99) {
new_f[i] <- f[order_a[i,1]]
}
final_H <- matrix(rep(0,99*99),nrow=99)
for (i in 1:99){
for (j in 1:99){
k <- new_f[i]
l <- new_f[j]
final_H[i,j] <- B4[k,l]
}
}
M <- matrix(rep(0,99*99),nrow=99)
for (i in 1:99){
for (j in 1:99){
if(i != j) {
M[i,j] <- (QQ1[i,j]-final_H[i,j])/sqrt(final_H[i,j])/sqrt(1-final_H[i,j]) #
} else
{
M[i,j] =0
}
}
}
M11 <- M[1:N1,1:N1]
M12 <- M[1:N1,(N1+1):99]
M21 <- M[(N1+1):99,1:N1]
M22 <- M[(N1+1):99,(N1+1):99]
M11 <- M11/sqrt(N1)
u <- (sqrt(N1-1)+sqrt(N2))^2
sigma <- sqrt(u)*{(1/sqrt(N1-1)+1/sqrt(N2))^(1/3)}
t21 <- (max(eigen(t(M12) %*% M12)$values)-u)/sigma
t22 <- (max(eigen(M11)$values)-2)*N1^(2/3)
t1 <- max(c(t11+t12,t11+t13))
out1[[z]] <- t1
}
out1 <- as.vector(unlist(out1))
out12 <- list()
for (z in 1:100){
if ( out1[z] > new_rej12)
out12[[z]] <- 0
if ( out1[z] < new_rej12)
out12[[z]] <- 1
}
out12<- as.vector(unlist(out12))
mo1 <- mean(out12)
mo1
REJS <- function(N){
rej1 <- list()
for (z in 1:N) {
EA <- matrix(0,100,100)
Q <- matrix(c(0.3,0.1,0.1,0.3), 2, 2)
z1 <- matrix(c(1,0),2,1)
z2 <- matrix(c(0,1),2,1)
EA[1:50, 1:50] <- matrix(t(z1) %*% Q %*% z1, 50, 50)
EA[51:100, 1:50] <- matrix(t(z2) %*% Q %*% z1, 50, 50)
EA[1:50, 51:100] <- matrix(t(z1) %*% Q %*% z2, 50, 50)
EA[51:100, 51:100] <- matrix(t(z2) %*% Q %*% z2, 50, 50)
A <- matrix(0,100,100)
for (i in 1:100){
for(j in 1:100){
A[i,j] <- rbinom(1,1,EA[i,j])
}
}
A1 <- A
A1[lower.tri(A1)] <- t(A1)[lower.tri(A1)]
A3 <- A1[-1,-1]
b <- A3[1,]
Nr1 <- length(which (b == 1, arr.ind = T))
Nr2 <- length(which (b == 0, arr.ind = T))
u <- (sqrt(Nr1-1)+sqrt(Nr2))^2
sigma <- sqrt(u)*{(1/sqrt(Nr1-1)+1/sqrt(Nr2))^(1/3)}
X1 <- matrix(rnorm(Nr1*Nr1,0,1),nrow=Nr1,ncol=Nr1)
diag(X1) <- rnorm(Nr1,0,2)
X1[lower.tri(X1)] <- t(X1)[lower.tri(X1)]
X1 <- X1/sqrt(Nr1)
X2 <- matrix(rnorm(Nr1*Nr2,0,1),nrow=Nr1,ncol=Nr2)
rt11 <- abs((max(eigen(t(X2) %*% X2)$values)-u)/sigma)
rt12 <- abs(max(eigen(X1)$values)-2)*N1^(2/3)
rej1[[z]] <- rt11+rt12
}
rej1<- as.vector(unlist(rej1))
new_rej12 <- rej1[order(rej1)][95]*2
return new_rej12
}
REJS <- function(N){
rej1 <- list()
for (z in 1:N) {
EA <- matrix(0,100,100)
Q <- matrix(c(0.3,0.1,0.1,0.3), 2, 2)
z1 <- matrix(c(1,0),2,1)
z2 <- matrix(c(0,1),2,1)
EA[1:50, 1:50] <- matrix(t(z1) %*% Q %*% z1, 50, 50)
EA[51:100, 1:50] <- matrix(t(z2) %*% Q %*% z1, 50, 50)
EA[1:50, 51:100] <- matrix(t(z1) %*% Q %*% z2, 50, 50)
EA[51:100, 51:100] <- matrix(t(z2) %*% Q %*% z2, 50, 50)
A <- matrix(0,100,100)
for (i in 1:100){
for(j in 1:100){
A[i,j] <- rbinom(1,1,EA[i,j])
}
}
A1 <- A
A1[lower.tri(A1)] <- t(A1)[lower.tri(A1)]
A3 <- A1[-1,-1]
b <- A3[1,]
Nr1 <- length(which (b == 1, arr.ind = T))
Nr2 <- length(which (b == 0, arr.ind = T))
u <- (sqrt(Nr1-1)+sqrt(Nr2))^2
sigma <- sqrt(u)*{(1/sqrt(Nr1-1)+1/sqrt(Nr2))^(1/3)}
X1 <- matrix(rnorm(Nr1*Nr1,0,1),nrow=Nr1,ncol=Nr1)
diag(X1) <- rnorm(Nr1,0,2)
X1[lower.tri(X1)] <- t(X1)[lower.tri(X1)]
X1 <- X1/sqrt(Nr1)
X2 <- matrix(rnorm(Nr1*Nr2,0,1),nrow=Nr1,ncol=Nr2)
rt11 <- abs((max(eigen(t(X2) %*% X2)$values)-u)/sigma)
rt12 <- abs(max(eigen(X1)$values)-2)*N1^(2/3)
rej1[[z]] <- rt11+rt12
}
rej1<- as.vector(unlist(rej1))
new_rej12 <- rej1[order(rej1)][95]*2
return (new_rej12)
}
T <-REJS(100)
T
